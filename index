<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Calcul de Dilatation d’un Parquet</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- Chart.js pour les graphiques -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: 'Inter', sans-serif;
    }
    /* Rendre le canvas plus petit */
    #dilatationChart {
      max-height: 200px; /* Hauteur fixe pour le graphique */
      width: 100%; /* S'adapte à la largeur du conteneur */
    }
  </style>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen p-4">

  <div class="bg-white p-8 rounded-lg shadow-lg max-w-md w-full">
    <h2 class="text-2xl font-bold mb-6 text-center text-gray-800">Calcul de la dilatation d’un parquet en bois</h2>

    <div class="mb-4">
      <label for="longueur" class="block text-gray-700 text-sm font-semibold mb-2">Longueur initiale du parquet (en mètres) :</label>
      <input type="number" id="longueur" step="0.01" placeholder="Ex : 4"
             class="shadow-sm appearance-none border rounded-lg w-full py-3 px-4 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
    </div>

    <div class="mb-6">
      <label for="temperature" class="block text-gray-700 text-sm font-semibold mb-2">Variation de température (en °C) :</label>
      <input type="number" id="temperature" step="1" placeholder="Ex : 15"
             class="shadow-sm appearance-none border rounded-lg w-full py-3 px-4 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
    </div>

    <div class="mb-6">
      <label for="typeBois" class="block text-gray-700 text-sm font-semibold mb-2">Type de bois :</label>
      <select id="typeBois"
              class="shadow-sm appearance-none border rounded-lg w-full py-3 px-4 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
        <option value="generique">Bois Générique (3.0e-5)</option>
        <option value="chene">Chêne (5.0e-6)</option>
        <option value="erable">Érable (6.0e-6)</option>
        <option value="pin">Pin (3.5e-5)</option>
        <option value="hetre">Hêtre (3.0e-5)</option>
        <option value="frene">Frêne (2.5e-5)</option>
        <option value="noyer">Noyer (2.0e-5)</option>
        <option value="acajou">Acajou (1.5e-5)</option>
        <option value="bambou">Bambou (7.0e-6)</option>
      </select>
    </div>

    <button onclick="calculerDilatation()"
            class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-4 rounded-lg w-full transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 mb-4">
      Calculer la dilatation
    </button>

    <div class="resultat mt-6 p-4 bg-blue-50 border border-blue-200 text-blue-800 rounded-lg text-center font-semibold" id="resultat">
      <!-- Le résultat sera affiché ici -->
    </div>

    <!-- Section pour le graphique, toujours cachée -->
    <div class="mt-8 hidden" id="chartSection">
      <h3 class="text-xl font-bold mb-4 text-gray-800 text-center">Évolution de la Dilatation en fonction de la Température</h3>
      <canvas id="dilatationChart"></canvas>
      <button onclick="downloadChart()"
              class="mt-4 bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-lg w-full transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50">
        Télécharger le graphique (PNG)
      </button>
    </div>

    <!-- Section pour l'historique -->
    <div class="mt-8">
      <h3 class="text-xl font-bold mb-4 text-gray-800 text-center">Historique des Calculs</h3>
      <div id="historiqueCalculs" class="bg-gray-50 p-4 rounded-lg border border-gray-200 max-h-60 overflow-y-auto">
        <!-- L'historique sera affiché ici -->
        <p class="text-gray-500 text-center">Aucun calcul effectué pour l'instant.</p>
      </div>
      <button onclick="clearHistory()"
              class="mt-4 bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg w-full transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50">
        Effacer l'historique
      </button>
    </div>

    <!-- Section ajoutée pour les crédits -->
    <div class="mt-8 text-center text-gray-600 text-sm">
      <p>Ce travail a été réalisé par Liam François et Arthur en 2025.</p>
      <p>Dans le cadre du cours d'activités science.</p>
    </div>
  </div>

  <script>
    let dilatationChart; // Variable pour stocker l'instance du graphique
    let history = []; // Tableau pour stocker l'historique des calculs

    /**
     * Renders or updates the line chart showing dilatation evolution with temperature.
     * The chart is based on the current initial length (L0) and selected wood type (alpha).
     * The chart section remains hidden, but the canvas is updated for download functionality.
     */
    function renderChart() {
      const ctx = document.getElementById('dilatationChart').getContext('2d');
      const chartSection = document.getElementById('chartSection');

      const L0 = parseFloat(document.getElementById("longueur").value);
      const typeBois = document.getElementById("typeBois").value;
      const typeBoisLabel = document.getElementById("typeBois").options[document.getElementById("typeBois").selectedIndex].text.split(' ')[0];

      // Define coefficients of thermal expansion for different wood types.
      let alpha;
      switch (typeBois) {
        case 'chene': alpha = 5e-6; break;
        case 'erable': alpha = 6e-6; break;
        case 'pin': alpha = 3.5e-5; break;
        case 'hetre': alpha = 3e-5; break;
        case 'frene': alpha = 2.5e-5; break;
        case 'noyer': alpha = 2.0e-5; break;
        case 'acajou': alpha = 1.5e-5; break;
        case 'bambou': alpha = 7.0e-6; break;
        case 'generique': default: alpha = 3e-5; break;
      }

      // Generate data points for the evolution chart
      const tempRange = [];
      const dilatationData = [];
      // Temperatures from -10°C to 40°C for the graph
      for (let t = -10; t <= 40; t += 5) {
        tempRange.push(t);
        const deltaL = L0 * alpha * t; // Calculate dilatation for each temperature in the range
        dilatationData.push(deltaL * 1000); // Convert to mm
      }

      // If L0 is invalid, destroy the chart and ensure the section is hidden.
      if (isNaN(L0) || L0 <= 0) {
        chartSection.classList.add('hidden'); // Ensure it's hidden
        if (dilatationChart) {
          dilatationChart.destroy();
          dilatationChart = null;
        }
        return;
      } else {
        // Keep the chart section hidden, but update the canvas
        chartSection.classList.add('hidden'); // Ensure it remains hidden
      }

      if (dilatationChart) {
        // Update existing chart
        dilatationChart.data.labels = tempRange;
        dilatationChart.data.datasets[0].data = dilatationData;
        dilatationChart.data.datasets[0].label = `Dilatation (${typeBoisLabel}, L0=${L0}m)`;
        dilatationChart.update();
      } else {
        // Create new chart
        dilatationChart = new Chart(ctx, {
          type: 'line', // Line chart for evolution
          data: {
            labels: tempRange,
            datasets: [{
              label: `Dilatation (${typeBoisLabel}, L0=${L0}m)`,
              data: dilatationData,
              fill: false, // Don't fill area under the line
              borderColor: 'rgb(59, 130, 246)', // Tailwind blue-500
              tension: 0.1 // Smooth the line
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false, // Allow custom height
            scales: {
              y: {
                beginAtZero: true,
                title: {
                  display: true,
                  text: 'Dilatation (mm)'
                }
              },
              x: {
                title: {
                  display: true,
                  text: 'Variation de Température (°C)'
                }
              }
            },
            plugins: {
              legend: {
                display: true, // Show legend for wood type and L0
                position: 'top',
              },
              tooltip: {
                callbacks: {
                  label: function(context) {
                    return `Dilatation: ${context.raw.toFixed(2)} mm`;
                  }
                }
              }
            }
          }
        });
      }
    }

    /**
     * Renders the history of calculations in the dedicated div.
     */
    function renderHistory() {
      const historyDiv = document.getElementById("historiqueCalculs");
      historyDiv.innerHTML = ''; // Efface l'historique précédent

      if (history.length === 0) {
        historyDiv.innerHTML = '<p class="text-gray-500 text-center">Aucun calcul effectué pour l\'instant.</p>';
        return;
      }

      const ul = document.createElement('ul');
      ul.className = 'list-disc list-inside space-y-2';

      history.forEach((calc, index) => {
        const li = document.createElement('li');
        li.className = 'text-gray-700 text-sm';
        li.innerHTML = `<strong>${index + 1}.</strong> Longueur: ${calc.longueur} m, Température: ${calc.temperature}°C, Bois: ${calc.typeBoisLabel} &rarr; Dilatation: ${calc.dilatation.toFixed(2)} mm`;
        ul.appendChild(li);
      });
      historyDiv.appendChild(ul);
    }

    /**
     * Clears the calculation history and updates the display.
     */
    function clearHistory() {
      history = []; // Vide le tableau d'historique
      renderHistory(); // Met à jour l'affichage de l'historique
      renderChart(); // Met à jour le graphique (le cachera si L0 est invalide ou l'historique est vide)
    }

    /**
     * Downloads the chart as a PNG image.
     */
    function downloadChart() {
      const canvas = document.getElementById('dilatationChart');
      if (!canvas || !dilatationChart || history.length === 0) {
        console.warn("Le graphique est vide ou non initialisé, impossible de télécharger.");
        // Optionally, inform the user with a message box instead of console.warn
        // For example: displayMessageBox("Le graphique est vide ou non initialisé, impossible de télécharger.");
        return;
      }

      const link = document.createElement('a');
      link.href = canvas.toDataURL('image/png');
      link.download = 'dilatation_parquet_evolution_graphique.png';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }

    /**
     * Calculates the thermal expansion of a wooden floor.
     * This function is triggered by the "Calculer la dilatation" button.
     */
    function calculerDilatation() {
      const L0 = parseFloat(document.getElementById("longueur").value);
      const deltaT = parseFloat(document.getElementById("temperature").value);
      const typeBois = document.getElementById("typeBois").value;
      const typeBoisLabel = document.getElementById("typeBois").options[document.getElementById("typeBois").selectedIndex].text.split(' ')[0];

      let alpha;
      switch (typeBois) {
        case 'chene': alpha = 5e-6; break;
        case 'erable': alpha = 6e-6; break;
        case 'pin': alpha = 3.5e-5; break;
        case 'hetre': alpha = 3e-5; break;
        case 'frene': alpha = 2.5e-5; break;
        case 'noyer': alpha = 2.0e-5; break;
        case 'acajou': alpha = 1.5e-5; break;
        case 'bambou': alpha = 7.0e-6; break;
        case 'generique': default: alpha = 3e-5; break;
      }

      if (isNaN(L0) || isNaN(deltaT) || L0 <= 0) {
        document.getElementById("resultat").innerText = "Veuillez entrer des valeurs valides pour la longueur (doit être positive) et la variation de température.";
        renderChart(); // Cache le graphique si les entrées sont invalides
        return;
      }

      const deltaL = L0 * alpha * deltaT;
      const deltaLmm = deltaL * 1000;

      document.getElementById("resultat").innerText =
        `Le parquet va se dilater d’environ ${deltaLmm.toFixed(2)} mm (pour le ${typeBoisLabel}).`;

      history.push({
        longueur: L0,
        temperature: deltaT,
        typeBois: typeBois,
        typeBoisLabel: typeBoisLabel,
        dilatation: deltaLmm
      });

      // Update the chart and history
      renderChart();
      renderHistory();
    }

    // Initial render when the page loads
    document.addEventListener('DOMContentLoaded', () => {
      // Set default values for inputs to allow chart to render on load
      document.getElementById("longueur").value = 4;
      document.getElementById("temperature").value = 15;
      renderChart(); // This will ensure the chart section is hidden initially if L0 is not set or invalid
      renderHistory();
    });
  </script>
</body>
</html>
